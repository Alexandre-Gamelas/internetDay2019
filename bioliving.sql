-- MySQL Script generated by MySQL Workbench
-- Wed Apr 24 17:24:37 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bioliving
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bioliving
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bioliving` DEFAULT CHARACTER SET utf8 ;
USE `bioliving` ;

-- -----------------------------------------------------
-- Table `bioliving`.`nacionalides`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`nacionalides` (
  `id_nacionalides` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id_nacionalides`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`postais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`postais` (
  `id_postais` INT NOT NULL AUTO_INCREMENT,
  `postal` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_postais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`papeis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`papeis` (
  `id_papeis` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_papeis`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`utilizadores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`utilizadores` (
  `id_utilizadores` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(200) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `data_nascimento` DATE NOT NULL,
  `bio` MEDIUMTEXT NULL,
  `ref_nacionalides` INT NOT NULL DEFAULT n/d,
  `ref_postais` INT NOT NULL,
  `ref_papeis` INT NOT NULL,
  PRIMARY KEY (`id_utilizadores`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_utilizadores_nacionalides_idx` (`ref_nacionalides` ASC) VISIBLE,
  INDEX `fk_utilizadores_postais1_idx` (`ref_postais` ASC) VISIBLE,
  INDEX `fk_utilizadores_papeis1_idx` (`ref_papeis` ASC) VISIBLE,
  CONSTRAINT `fk_utilizadores_nacionalides`
    FOREIGN KEY (`ref_nacionalides`)
    REFERENCES `bioliving`.`nacionalides` (`id_nacionalides`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_utilizadores_postais1`
    FOREIGN KEY (`ref_postais`)
    REFERENCES `bioliving`.`postais` (`id_postais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_utilizadores_papeis1`
    FOREIGN KEY (`ref_papeis`)
    REFERENCES `bioliving`.`papeis` (`id_papeis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`tendencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`tendencias` (
  `id_tendencias` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id_tendencias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`tend_utilizadores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`tend_utilizadores` (
  `ref_tendencias` INT NOT NULL,
  `ref_utilizadores` INT NOT NULL,
  INDEX `fk_tendencias_has_utilizadores_utilizadores1_idx` (`ref_utilizadores` ASC) VISIBLE,
  INDEX `fk_tendencias_has_utilizadores_tendencias1_idx` (`ref_tendencias` ASC) VISIBLE,
  PRIMARY KEY (`ref_tendencias`, `ref_utilizadores`),
  CONSTRAINT `fk_tendencias_has_utilizadores_tendencias1`
    FOREIGN KEY (`ref_tendencias`)
    REFERENCES `bioliving`.`tendencias` (`id_tendencias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tendencias_has_utilizadores_utilizadores1`
    FOREIGN KEY (`ref_utilizadores`)
    REFERENCES `bioliving`.`utilizadores` (`id_utilizadores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`modulos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`modulos` (
  `id_modulos` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `link` VARCHAR(400) NOT NULL,
  PRIMARY KEY (`id_modulos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`papel_mod`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`papel_mod` (
  `ref_modulos` INT NOT NULL,
  `ref_papeis` INT NOT NULL,
  `prioridade` INT NOT NULL,
  PRIMARY KEY (`ref_modulos`, `ref_papeis`),
  INDEX `fk_modulos_has_papeis_papeis1_idx` (`ref_papeis` ASC) VISIBLE,
  INDEX `fk_modulos_has_papeis_modulos1_idx` (`ref_modulos` ASC) VISIBLE,
  CONSTRAINT `fk_modulos_has_papeis_modulos1`
    FOREIGN KEY (`ref_modulos`)
    REFERENCES `bioliving`.`modulos` (`id_modulos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_modulos_has_papeis_papeis1`
    FOREIGN KEY (`ref_papeis`)
    REFERENCES `bioliving`.`papeis` (`id_papeis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`categorias` (
  `id_categorias` INT NOT NULL,
  `nome` VARCHAR(300) NOT NULL,
  `descricao` VARCHAR(300) NOT NULL,
  `caminho` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id_categorias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`desafios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`desafios` (
  `id_desafios` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(300) NOT NULL,
  `data_inicio` DATE NOT NULL,
  `data_fim` DATE NULL,
  `ref_categorias` INT NOT NULL,
  `recompensa` INT NOT NULL,
  PRIMARY KEY (`id_desafios`),
  INDEX `fk_desafios_categorias1_idx` (`ref_categorias` ASC) VISIBLE,
  CONSTRAINT `fk_desafios_categorias1`
    FOREIGN KEY (`ref_categorias`)
    REFERENCES `bioliving`.`categorias` (`id_categorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`eventos` (
  `id_eventos` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(300) NOT NULL,
  `data_inicio` DATE NOT NULL,
  `data_fim` DATE NOT NULL,
  `longitude` DOUBLE NOT NULL,
  `latitude` DOUBLE NOT NULL,
  `descricao` MEDIUMTEXT NOT NULL,
  `participantes` INT NOT NULL,
  `alcance` INT NOT NULL,
  `super` TINYINT NOT NULL,
  `acessibilidade` VARCHAR(300) NULL,
  `ref_desafios` INT NULL,
  `ref_categorias` INT NULL,
  PRIMARY KEY (`id_eventos`),
  INDEX `fk_eventos_desafios1_idx` (`ref_desafios` ASC) VISIBLE,
  INDEX `fk_eventos_categorias1_idx` (`ref_categorias` ASC) VISIBLE,
  CONSTRAINT `fk_eventos_desafios1`
    FOREIGN KEY (`ref_desafios`)
    REFERENCES `bioliving`.`desafios` (`id_desafios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_eventos_categorias1`
    FOREIGN KEY (`ref_categorias`)
    REFERENCES `bioliving`.`categorias` (`id_categorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`fotografiasEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`fotografiasEventos` (
  `id_fotografiasEventos` INT NOT NULL,
  `caminho` VARCHAR(300) NOT NULL,
  `tag` VARCHAR(300) NULL,
  PRIMARY KEY (`id_fotografiasEventos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`eventos_fotografiasEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`eventos_fotografiasEventos` (
  `ref_eventos` INT NOT NULL,
  `ref_fotografiasEventos` INT NOT NULL,
  PRIMARY KEY (`ref_eventos`, `ref_fotografiasEventos`),
  INDEX `fk_eventos_has_fotografiasEventos_fotografiasEventos1_idx` (`ref_fotografiasEventos` ASC) VISIBLE,
  INDEX `fk_eventos_has_fotografiasEventos_eventos1_idx` (`ref_eventos` ASC) VISIBLE,
  CONSTRAINT `fk_eventos_has_fotografiasEventos_eventos1`
    FOREIGN KEY (`ref_eventos`)
    REFERENCES `bioliving`.`eventos` (`id_eventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_eventos_has_fotografiasEventos_fotografiasEventos1`
    FOREIGN KEY (`ref_fotografiasEventos`)
    REFERENCES `bioliving`.`fotografiasEventos` (`id_fotografiasEventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`fotografiasDesafios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`fotografiasDesafios` (
  `id_fotografiasDesafios` INT NOT NULL AUTO_INCREMENT,
  `caminho` VARCHAR(300) NOT NULL,
  `tag` VARCHAR(300) NULL,
  PRIMARY KEY (`id_fotografiasDesafios`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`desafios_fotografiasDesafios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`desafios_fotografiasDesafios` (
  `ref_desafios` INT NOT NULL,
  `ref_fotografiasDesafios` INT NOT NULL,
  PRIMARY KEY (`ref_desafios`, `ref_fotografiasDesafios`),
  INDEX `fk_desafios_has_fotografiasDesafios_fotografiasDesafios1_idx` (`ref_fotografiasDesafios` ASC) VISIBLE,
  INDEX `fk_desafios_has_fotografiasDesafios_desafios1_idx` (`ref_desafios` ASC) VISIBLE,
  CONSTRAINT `fk_desafios_has_fotografiasDesafios_desafios1`
    FOREIGN KEY (`ref_desafios`)
    REFERENCES `bioliving`.`desafios` (`id_desafios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_desafios_has_fotografiasDesafios_fotografiasDesafios1`
    FOREIGN KEY (`ref_fotografiasDesafios`)
    REFERENCES `bioliving`.`fotografiasDesafios` (`id_fotografiasDesafios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`crachas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`crachas` (
  `id_crachas` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `ref_desafios` INT NULL,
  `ref_eventos` INT NULL,
  PRIMARY KEY (`id_crachas`),
  INDEX `fk_crachas_desafios1_idx` (`ref_desafios` ASC) VISIBLE,
  INDEX `fk_crachas_eventos1_idx` (`ref_eventos` ASC) VISIBLE,
  CONSTRAINT `fk_crachas_desafios1`
    FOREIGN KEY (`ref_desafios`)
    REFERENCES `bioliving`.`desafios` (`id_desafios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_crachas_eventos1`
    FOREIGN KEY (`ref_eventos`)
    REFERENCES `bioliving`.`eventos` (`id_eventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`fotografiasEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`fotografiasEventos` (
  `id_fotografiasEventos` INT NOT NULL,
  `caminho` VARCHAR(300) NOT NULL,
  `tag` VARCHAR(300) NULL,
  PRIMARY KEY (`id_fotografiasEventos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`crachas_fotografiasEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`crachas_fotografiasEventos` (
  `ref_crachas` INT NOT NULL,
  `ref_fotografiasEventos` INT NOT NULL,
  PRIMARY KEY (`ref_crachas`, `ref_fotografiasEventos`),
  INDEX `fk_crachas_has_fotografiasEventos_fotografiasEventos1_idx` (`ref_fotografiasEventos` ASC) VISIBLE,
  INDEX `fk_crachas_has_fotografiasEventos_crachas1_idx` (`ref_crachas` ASC) VISIBLE,
  CONSTRAINT `fk_crachas_has_fotografiasEventos_crachas1`
    FOREIGN KEY (`ref_crachas`)
    REFERENCES `bioliving`.`crachas` (`id_crachas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_crachas_has_fotografiasEventos_fotografiasEventos1`
    FOREIGN KEY (`ref_fotografiasEventos`)
    REFERENCES `bioliving`.`fotografiasEventos` (`id_fotografiasEventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bioliving`.`utilizadores_desafios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bioliving`.`utilizadores_desafios` (
  `ref_utilizadores` INT NOT NULL,
  `ref_desafios` INT NOT NULL,
  `data_aceite` DATE NOT NULL,
  `data_final` DATE NOT NULL,
  PRIMARY KEY (`ref_utilizadores`, `ref_desafios`),
  INDEX `fk_utilizadores_has_desafios_desafios1_idx` (`ref_desafios` ASC) VISIBLE,
  INDEX `fk_utilizadores_has_desafios_utilizadores1_idx` (`ref_utilizadores` ASC) VISIBLE,
  CONSTRAINT `fk_utilizadores_has_desafios_utilizadores1`
    FOREIGN KEY (`ref_utilizadores`)
    REFERENCES `bioliving`.`utilizadores` (`id_utilizadores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_utilizadores_has_desafios_desafios1`
    FOREIGN KEY (`ref_desafios`)
    REFERENCES `bioliving`.`desafios` (`id_desafios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
